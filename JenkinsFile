pipeline{
  agent any 
  environment{
         AWS_REGION='us-west-2c'
         AWS_DEFAULT_REGION='us-west-2c'
     }
    tools { 
        maven 'Maven'
        jdk 'jdk8'
    }
  
  stages {
    stage('Build'){
       steps {
                sh 'mvn -Dmaven.test.failure.ignore=true install' 
                sh 'mvn  clean package'
                    
                
            }
     }
    stage('Test'){
      steps{
        sh 'mvn test'
      }
      }
    stage("Build & SonarQube analysis") {
            agent any
            steps {
              withSonarQubeEnv('SonarServer') {
                sh 'java -version'
                sh 'mvn  clean package sonar:sonar'
              }
            }
          }
         
  
    stage('collect artifact'){
     steps{
     archiveArtifacts artifacts:'target/*.jar'
     }
     }
     stage('deploy to artifactory')
     {
     steps{
     
     rtUpload (
    serverId: 'Artifactory_Server',
    spec: '''{
          "files": [
            {
              "pattern": "target/*.jar",
              "target": "art-doc-dev-loc/sample"
            }
         ]
    }''',
 
    buildName: 'holyFrog',
    buildNumber: '48'
)
     }}
     stage('download from artifactory')
         {
            steps{
     
                rtDownload (
                    serverId: 'Artifactory_Server',
                    spec: '''{
                    "files": [
                         {
                             "pattern": "art-doc-dev-loc/sample/",
                             "target": ""
                        }
                     ]
                }''',
 
)
     }}

     stage("deploy to ec2"){
       steps{
            sshagent(['43e7be73-7fc3-4c18-aeaf-03825088ec00']){
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@54.69.175.223 'echo $HOME'"   
                    sh 'scp -r /var/jenkins_home/workspace/jenkinsAws/target/TeamManagement-0.0.2-SNAPSHOT.jar ubuntu@54.69.175.223:/home/ubuntu/artifact'
        }
       }
     }
   
        }
     
     
       
      
  
  
  post {  
         always {  
             echo 'This will always run'  
         }  
         success {   
            echo "========Deploying executed successfully========"
            emailext attachLog: true, body: "<b>Example</b><br>Project: ${env.JOB_NAME}", from: 'net2bks@gmail.com', mimeType: 'text/html', replyTo: '', subject: "Deploy Success CI: Project name -> ${env.JOB_NAME}", to: "net2bks@gmail.com";
         }  
         failure {  
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: 'net2bks@gmail.com', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "net2bks@gmail.com";  
         }  
         unstable {  
             echo 'This will run only if the run was marked as unstable'  
         }  
         changed {  
             echo 'This will run only if the state of the Pipeline has changed'  
             echo 'For example, if the Pipeline was previously failing but is now successful'  
         }  
     }
  }

